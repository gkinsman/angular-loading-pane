{"version":3,"sources":["loading-pane.js","loading-pane-views.js"],"names":["angular","module","directive","restrict","replace","transclude","scope","tracker","templateUrl","factory","$q","$timeout","WorkTracker","isComplete","minDelayInMs","self","this","complete","activePromises","track","promise","completePromise","all","Math","max","createTracker","e","run","$templateCache","put"],"mappings":"AAAAA,QAAAC,OAAA,kBACAC,UAAA,eAAA,WACA,OACAC,SAAA,IACAC,SAAA,EACAC,YAAA,EACAC,OAAAC,QAAA,KACAC,YAAA,4BAGAC,QAAA,WAAA,KAAA,WAAA,SAAAC,EAAAC,GACA,QAAAC,GAAAC,EAAAC,GACA,GAAAC,GAAAC,IACAD,GAAAE,SAAAJ,EACAE,EAAAG,eAAA,EACAH,EAAAI,MAAA,SAAAC,GAGA,MAFAL,GAAAE,UAAA,EACAF,EAAAG,iBACA,IAAAJ,EACAM,EAAAA,WAAAL,EAAAM,iBAEAX,EAAAY,KAAAF,EAAAT,EAAA,aACAG,KADAJ,WAEAK,EAAAM,kBAIAN,EAAAM,gBAAA,WACAN,EAAAG,eAAAK,KAAAC,IAAA,EAAAT,EAAAG,eAAA,GACAH,EAAAE,SAAA,IAAAF,EAAAG,gBAIA,OACAO,cAAA,SAAAZ,EAAAC,GACA,MAAA,IAAAF,GAAAC,KAAA,EAAAC,GAAA,QCnCA,SAAAb,GACA,IACAA,EAAAD,QAAAC,OAAA,eACA,MAAAyB,GACAzB,EAAAD,QAAAC,OAAA,kBAEAA,EAAA0B,KAAA,iBAAA,SAAAC,GACAA,EAAAC,IAAA,wBACA","file":"loading-pane.min.js","sourcesContent":["angular.module('loadingPane', [])\r\n    .directive('loadingPane', [function () {\r\n        return {\r\n            restrict: 'E',\r\n            replace: true,\r\n            transclude: true,\r\n            scope: {tracker: '='},\r\n            templateUrl: 'loading-pane.tpl.html'\r\n        };\r\n    }])\r\n    .factory('loading', ['$q', '$timeout', function ($q, $timeout) {\r\n        function WorkTracker(isComplete, minDelayInMs) {\r\n            var self = this;\r\n            self.complete = isComplete;\r\n            self.activePromises = 0;\r\n            self.track = function (promise) {\r\n                self.complete = false;\r\n                self.activePromises++;\r\n                if (minDelayInMs === 0) {\r\n                    return promise.finally(self.completePromise);\r\n                } else {\r\n                    return $q.all([promise, $timeout(function () {\r\n                    }, minDelayInMs)])\r\n                        .finally(self.completePromise);\r\n                }\r\n            };\r\n\r\n            self.completePromise = function () {\r\n                self.activePromises = Math.max(0, self.activePromises - 1);\r\n                self.complete = self.activePromises === 0;\r\n            };\r\n        }\r\n\r\n        return {\r\n            createTracker: function (isComplete, minDelayInMs) {\r\n                return new WorkTracker(isComplete !== false, minDelayInMs || 0);\r\n            }\r\n        };\r\n    }]);\r\n","(function(module) {\ntry {\n  module = angular.module('loadingPane');\n} catch (e) {\n  module = angular.module('loadingPane', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('loading-pane.tpl.html',\n    '<div class=\"loading-pane\" ng-class=\"[tracker.complete === true ? \\'lp-loaded\\' : \\'lp-loading\\']\" >\\n' +\n    '    <div class=\"lp-spinner\">\\n' +\n    '        <div class=\"lp-spinner-icon\"></div>\\n' +\n    '    </div>\\n' +\n    '    <div class=\"lp-content\" ng-transclude></div>\\n' +\n    '</div>');\n}]);\n})();\n"],"sourceRoot":"/source/"}